[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "chaostoolkit-kafka"
dynamic = ["version"]
description = "Kafka extension for Chaos Toolkit extensions"
authors = [
    {name = "Jorge Tapicha", email = "jitapichab@gmail.com"},
]
dependencies = [
    "chaostoolkit-lib>=1.42.0",
    "confluent-kafka>=2.3.0",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: Freely Distributable",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython"
]

[project.urls]
repository = "https://github.com/jitapichab/chaostoolkit-kafka"
changelog = "https://github.com/jitapichab/chaostoolkit-kafka/blob/master/README.md"

[tool]

[tool.pdm]
version = { source = "scm" }

[tool.pdm.scripts]
lint = {composite = ["ruff check ."]}
format = {composite = ["ruff check --fix .", "ruff format ."]}
test = {cmd = "pytest"}

[tool.pdm.dev-dependencies]
dev = [
    "coverage>=7.4.2",
    "pytest>=8.0.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.2.2",
]

[tool.ruff]
line-length = 80
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "build",
    "dist",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = "tests"
addopts = "-v -rxs --cov chaoskafka --cov-report term-missing:skip-covered -p no:warnings"
